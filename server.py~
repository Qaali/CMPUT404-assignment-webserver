#  coding: utf-8 
import SocketServer

# Copyright 2013 Abram Hindle, Eddie Antonio Santos
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# Furthermore it is derived from the Python documentation examples thus
# some of the code is Copyright Â© 2001-2013 Python Software
# Foundation; All Rights Reserved
#
# http://docs.python.org/2/library/socketserver.html
#
# run: python freetests.py

# try: curl -v -X GET http://127.0.0.1:8080/
import os
class MyWebServer(SocketServer.BaseRequestHandler):
    def handle(self):
        self.data = self.request.recv(1024).strip()
        print ("Got a request of: %s\n" % self.data)
        if self.data.split(" ")[0] == "GET":
            path = self.data.split(" ")[1]
            path = "www" + path
            http = self.data.split(" ")[2]
            http = http.splitlines()[0]
            self.get(path, http)
    def get(self,path,http):
        #If an http/1.1 is received,perform the rest of the instructions
        if http == "HTTP/1.1":
            request_path = os.path.abspath(path)
            val = request_path.find(os.getcwd()) # Return a string representing the current working directory.
            if val>-1:
                try:
                    #If / is given, redirect to index.html
                    if path[-1] == "/":
                        path = path + "index.html"
                    extension = path.split(".")[-1]
                    file = open(path, 'r')
                    #Construct the content before sending it back
                    content = "HTTP/1.1 200 OK" + "\r\n" + "Content-Type: text/" + extension + "\r\n\r\n" + file.read()
                    self.request.sendall(content)
                except IOError:
                    try:
                        f = open(path + "/index.html", 'r')
                        newpath = path.split("www/")[1]
                        #Construct the content
                        self.request.sendall("HTTP/1.1 301 Moved Permanently\r\n"+ newpath + "/\r\n" )
                    except IOError:
                        #Construct the 404 content 
                        self.request.sendall("HTTP/1.1 404 Not Found\r\n\r\n" + "404 error")
            else:
                #send back 404 error
                self.request.sendall("HTTP/1.1 404 Not Found\r\n\r\n" + "404 error")

if __name__ == "__main__":
    HOST, PORT = "localhost", 8080

    SocketServer.TCPServer.allow_reuse_address = True
    # Create the server, binding to localhost on port 8080
    server = SocketServer.TCPServer((HOST, PORT), MyWebServer)

    # Activate the server; this will keep running until you
    # interrupt the program with Ctrl-C
    server.serve_forever()
